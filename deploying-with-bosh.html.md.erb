---
title: Deploying with BOSH
---

BOSH is Cloud Foundryâ€™s orchestration tool for installing and managing software and virtual machines.  A product release should install successfully using BOSH before it can be crafted into an Ops Manager tile.

Refer to [BOSH documentation](https://bosh.io/) for more information about how to create a BOSH Release of your own.

This topic will lead you through the process of deploying an example BOSH release consisting of the [Nginx](http://nginx.org/) webserver.

## <a id='prep-environment'></a>Step 1: Prepare an Environment

For the purpose of this topic we will begin by preparing an environment on Amazon Web Services (AWS). The same exercises can be adapted to other IaaSs like vSphere or OpenStack.

1. Run the following command to clone the Example Tile Docs Resources git repository.
  <pre class='terminal'>
    $ git clone git@github.com:pivotal-cf-experimental/example-tile-docs-resources.git
  </pre>

1. `cd` into the cloned directory
  <pre class='terminal'>
    $ cd example-tile-docs-resources
  </pre>

1. Create a key pair for your AWS Virtual Machines and pipe it to a local file names MyKeyPair.pem
  <pre class='terminal'>
    $ aws ec2 create-key-pair --key-name MyKeyPair \
    | python -c 'import json,sys;obj=json.load(sys.stdin);print obj["KeyMaterial"]' \
    \> MyKeyPair.pem
  </pre>

1. Use the [AWS CLI](http://docs.aws.amazon.com/cli/latest/userguide/installing.html) to provision your AWS account with the resources specified in the template.
  <pre class='terminal'>
    $ aws cloudformation create-stack \
    --stack-name examplestack \
    --template-body file://cloudformation.json \
    --parameters \
    ParameterKey=01NATKeyPair,ParameterValue=MyKeyPair  \
    ParameterKey=02NATInstanceType,ParameterValue=t2.medium  \
    ParameterKey=03OpsManagerIngress,ParameterValue=0.0.0.0/0  \
    --capabilities CAPABILITY_IAM
  </pre>

1. Allocate an Elastic IP for your BOSH instance by running the following command. The terminal will output the IP address for your BOSH instance. Record this for use in a step below.
  <pre class='terminal'>
    $ aws ec2 allocate-address --domain vpc
    {
     "PublicIp": "52.8.233.151",
     "Domain": "vpc",
     "AllocationId": "eipalloc-13618976"
    }
  </pre>
  
## <a id='provision-microbosh'></a>Step 2: Install a MicroBOSH on your IaaS

See [Intializing an environment](http://bosh.io/docs/init.html) to learn about deploying MicroBOSH.

The Example Tile Docs resources you downloaded earlier contains a BOSH manifest, `bosh.yml`, for the MicroBOSH we will use to deploy the Example Release.

1. Edit this file to fill in all of the needed information particular to your AWS account, as indicated by the comments in the file.

1. Run the following command to deploy your MicroBOSH instance:

   <pre class='terminal'>
    $ bosh-init deploy ./bosh.yml
    Deployment manifest: '/Users/d/my-bosh/bosh.yml'
    Deployment state: '/Users/d/my-bosh/bosh-state.json'
    Finished deploying (00:16:35)
    Stopping registry... Finished (00:00:00)
    Cleaning up rendered CPI jobs... Finished (00:00:00)
  </pre>

## <a id='create-manifest'></a>Step 3: Prepare the BOSH Manifest for your release.

1. Target your MicroBOSH:
  <pre class='terminal'>
    $  bosh target 52.8.50.119
    Target set to `my-bosh'
    Your username: admin
    Enter password: admin
  </pre>

1. Upload your release by running:
  <pre class='terminal'>
    bosh upload release example-release-7+dev.2.tgz 
    Acting as user 'admin' on 'my-bosh'
    Verifying release...
    Task 29 done
    Started        2015-07-31 00:02:27 UTC
    Finished    2015-07-31 00:02:27 UTC
    Duration    00:00:00
    Release uploaded  
  </pre>

1. Upload the latest AWS Xen-HVM Light stemcell to your MicroBOSH by running:
  <pre class='terminal'>
    bosh upload stemcell https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3026
    Acting as user 'admin' on 'my-bosh'
    Using remote stemcell `https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3026'
    Director task 15
    Started update stemcell
    Started update stemcell > Downloading remote stemcell. Done (00:00:02)
    Started update stemcell > Extracting stemcell archive. Done (00:00:00)
    Started update stemcell > Verifying stemcell manifest. Done (00:00:00)
    Started update stemcell 
    Done update stemcell (00:00:11)
    Task 15 done
    Started   2015-07-30 21:23:09 UTC
    Finished  2015-07-30 21:23:20 UTC
    Duration  00:00:11
    Stemcell uploaded and created.
  </pre>

1. Get your BOSH Director (MicroBOSH) UUID by running:
  <pre class='terminal'>
    $ bosh status
    Config
      /Users/d/.bosh_config
    Director
      Name       my-bosh
      URL        https://52.8.50.119:25555
      Version    1.3012.0 (00000000)
      User       admin
      UUID       729452b0-2c1f-4763-a6ec-cf43e7f0ba89
  </pre> 

1. Edit `example-release.yml` and fill in details as indicated in the comments of the file.

1. Run the following command to set the deployment.

  <pre class='terminal'>
    bosh deployment ./example-release.yml
  </pre>

1. Deploy the example release:
  <pre class='terminal'>
   bosh deploy
   Acting as user 'admin'
   Are you sure you want to deploy? (type 'yes' to continue): yes
   Task 31 done
   Started     2015-07-31 00:04:19 UTC
   Finished    2015-07-31 00:12:52 UTC
   Duration    00:08:33<br>
   Deployed `example-product-906ec4aecbec172c9706' to `my-bosh'
  </pre>

## <a id='confirm-deployment'></a>Step 4: Confirm Successful Deployment

1. Check the VMs.
  <pre class='terminal'>
    $ bosh vms
    Acting as user 'admin' on 'my-bosh'
    Deployment `example-product-906ec4aecbec172c9706'
    Director task 32
    Task 32 done
    +--------------+---------+---------------+-----------+
    | Job/index    | State   | Resource Pool | IPs       |
    +--------------+---------+---------------+-----------+
    | web_server/0 | running | vms           | 10.0.16.5 |
    +--------------+---------+---------------+-----------+
  </pre>

1. SSH into your VPC using the IP that you [allocated](#prep-environment) and the key pair that you [created](#prep-environment).
  <pre class='terminal'>
    $ ssh-add MyKeyPair.pem
    Identity added: MyKeyPair.pem (MyKeyPair.pem)
    $ ssh ubuntu@BOSH-IP-ADDRESS
    Welcome to Ubuntu 14.04.2 LTS (GNU/Linux 3.13.0-59-generic x86_64)
  </pre>

1. Confirm successful deployment by viewing the 'hello world' page served by the webserver in the example product.
  <pre class='terminal'>
    $ curl 10.0.16.5
    &lt;html&gt;
     &lt;body&gt;
       &lt;h1&gt;Hello World&lt;/h1&gt;
     &lt;/body&gt;
    &lt;/html&gt;
  </pre>

Before proceeding to the [Deploying Your Product as a Tile](./deploying-with-ops-man-tile.html) section make sure to terminate the instances in your VPC.
